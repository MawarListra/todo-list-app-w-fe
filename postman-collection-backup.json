{
  "info": {
    "name": "TODO List API - Complete Collection",
    "description": "Comprehensive API collection for the TODO List API with authentication, lists, and tasks management",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3001",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "list_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "task_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê Authentication",
      "description": "User authentication endpoints",
      "item": [
        {
          "name": "Register New User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"testuser@example.com\",\n  \"password\": \"Password123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Register a new user account"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.collectionVariables.set('auth_token', response.data.token);",
                  "        pm.collectionVariables.set('user_id', response.data.user.id);",
                  "        console.log('‚úÖ Registration successful, token saved');",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"testuser@example.com\",\n  \"password\": \"Password123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Login with existing user credentials"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.collectionVariables.set('auth_token', response.data.token);",
                  "        pm.collectionVariables.set('user_id', response.data.user.id);",
                  "        console.log('‚úÖ Login successful, token saved');",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìã Lists Management",
      "description": "CRUD operations for todo lists",
      "item": [
        {
          "name": "Get All Lists",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/lists",
              "host": ["{{base_url}}"],
              "path": ["api", "lists"]
            },
            "description": "Retrieve all todo lists for the authenticated user"
          },
          "response": []
        },
        {
          "name": "Create New List",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"My New Project\",\n  \"description\": \"Tasks for my awesome new project\",\n  \"color\": \"#3B82F6\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/lists",
              "host": ["{{base_url}}"],
              "path": ["api", "lists"]
            },
            "description": "Create a new todo list"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.id) {",
                  "        pm.collectionVariables.set('list_id', response.data.id);",
                  "        console.log('‚úÖ List created, ID saved: ' + response.data.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Specific List",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/lists/{{list_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "lists", "{{list_id}}"]
            },
            "description": "Get details of a specific list"
          },
          "response": []
        },
        {
          "name": "Update List",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Project Name\",\n  \"description\": \"Updated description for my project\",\n  \"color\": \"#10B981\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/lists/{{list_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "lists", "{{list_id}}"]
            },
            "description": "Update an existing list"
          },
          "response": []
        },
        {
          "name": "Get Tasks in List",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/lists/{{list_id}}/tasks",
              "host": ["{{base_url}}"],
              "path": ["api", "lists", "{{list_id}}", "tasks"]
            },
            "description": "Get all tasks within a specific list"
          },
          "response": []
        },
        {
          "name": "Delete List",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/lists/{{list_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "lists", "{{list_id}}"]
            },
            "description": "Delete a list and all its tasks"
          },
          "response": []
        }
      ]
    },
    {
      "name": "‚úÖ Tasks Management",
      "description": "CRUD operations for tasks",
      "item": [
        {
          "name": "Create Task in List",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Implement authentication\",\n  \"description\": \"Add JWT authentication to the API\",\n  \"priority\": \"high\",\n  \"deadline\": \"2025-07-10T18:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tasks/lists/{{list_id}}/tasks",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks", "lists", "{{list_id}}", "tasks"]
            },
            "description": "Create a new task within a specific list"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.id) {",
                  "        pm.collectionVariables.set('task_id', response.data.id);",
                  "        console.log('‚úÖ Task created, ID saved: ' + response.data.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Specific Task",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/tasks/{{task_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks", "{{task_id}}"]
            },
            "description": "Get details of a specific task"
          },
          "response": []
        },
        {
          "name": "Update Task",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated task title\",\n  \"description\": \"Updated task description\",\n  \"priority\": \"medium\",\n  \"deadline\": \"2025-07-15T18:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tasks/{{task_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks", "{{task_id}}"]
            },
            "description": "Update an existing task"
          },
          "response": []
        },
        {
          "name": "Mark Task as Complete",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"completed\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tasks/{{task_id}}/completion",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks", "{{task_id}}", "completion"]
            },
            "description": "Mark a task as completed or incomplete"
          },
          "response": []
        },
        {
          "name": "Update Task Deadline",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"deadline\": \"2025-07-20T18:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tasks/{{task_id}}/deadline",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks", "{{task_id}}", "deadline"]
            },
            "description": "Update the deadline of a task"
          },
          "response": []
        },
        {
          "name": "Delete Task",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/tasks/{{task_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks", "{{task_id}}"]
            },
            "description": "Delete a specific task"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîç Advanced Queries",
      "description": "Advanced filtering and query operations",
      "item": [
        {
          "name": "Search Tasks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/tasks/search?q=test",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "test",
                  "description": "Search query string"
                }
              ]
            },
            "description": "Search tasks by title or description"
          },
          "response": []
        },
        {
          "name": "Get Task Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/tasks/{{task_id}}/statistics",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks", "{{task_id}}", "statistics"]
            },
            "description": "Get statistics for a specific task"
          },
          "response": []
        },
        {
          "name": "Get User Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/tasks/analytics",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks", "analytics"]
            },
            "description": "Get user task analytics and insights"
          },
          "response": []
        },
        {
          "name": "Get Tasks Due This Week",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/tasks/due-this-week",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks", "due-this-week"]
            },
            "description": "Get all tasks due within the next 7 days"
          },
          "response": []
        },
        {
          "name": "Get Tasks by Priority",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/tasks?priority=high",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks"],
              "query": [
                {
                  "key": "priority",
                  "value": "high"
                }
              ]
            },
            "description": "Filter tasks by priority level"
          },
          "response": []
        },
        {
          "name": "Get Completed Tasks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/tasks?completed=true",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks"],
              "query": [
                {
                  "key": "completed",
                  "value": "true"
                }
              ]
            },
            "description": "Get all completed tasks"
          },
          "response": []
        },
        {
          "name": "Sort Tasks by Deadline",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/tasks?sortBy=deadline&order=asc",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks"],
              "query": [
                {
                  "key": "sortBy",
                  "value": "deadline"
                },
                {
                  "key": "order",
                  "value": "asc"
                }
              ]
            },
            "description": "Sort tasks by deadline in ascending order"
          },
          "response": []
        },
        {
          "name": "Complex Filter Query",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/tasks?priority=high&completed=false&sortBy=deadline&order=asc",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks"],
              "query": [
                {
                  "key": "priority",
                  "value": "high"
                },
                {
                  "key": "completed",
                  "value": "false"
                },
                {
                  "key": "sortBy",
                  "value": "deadline"
                },
                {
                  "key": "order",
                  "value": "asc"
                }
              ]
            },
            "description": "Complex query: high priority, incomplete tasks sorted by deadline"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üè• System Health",
      "description": "Health check and system information endpoints",
      "item": [
        {
          "name": "Basic Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Basic health check endpoint"
          },
          "response": []
        },
        {
          "name": "API Information",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api",
              "host": ["{{base_url}}"],
              "path": ["api"]
            },
            "description": "Get API version and available endpoints"
          },
          "response": []
        }
      ]
    }
  ]
}
